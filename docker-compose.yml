version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: myteamcamp_postgres
    environment:
      POSTGRES_DB: myteamcamp_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - myteamcamp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: myteamcamp_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - myteamcamp_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: myteamcamp_app
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: myteamcamp_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: your_super_secret_jwt_key_here_change_in_production
      JWT_EXPIRES_IN: 7d
      REDIS_URL: redis://redis:6379
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - myteamcamp_network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: myteamcamp_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@myteamcamp.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - myteamcamp_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  myteamcamp_network:
    driver: bridge
